name: Docker Image CI

on:
  push:
    branches: [ docker ]
  pull_request:
    branches: [ master ]

jobs:
  publish-linux-x64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore src/
    - name: Build linux-x64
      run: dotnet publish -c release -r linux-x64 src/       
    - name: Build win10-x64
      run: dotnet publish -c release -r win10-x64 src/     
    - name: Echo
      run: echo $(pwd)
    - name: Zip
      run: |
        zip -r linux-x64.zip src/bin/Release/netcoreapp3.1/linux-x64/publish
        zip -r win10-x64.zip src/bin/Release/netcoreapp3.1/win10-x64/publish
    - uses: actions/upload-artifact@v2
      with:
        name: linux-x64
        path: linux-x64.zip
    - uses: actions/upload-artifact@v2
      with:
        name: win10-x64
        path: win10-x64.zip
  publish-linux-arm:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2    
    - name: Restore dependencies
      run: dotnet restore src/
    - name: Build
      run: dotnet publish -c release -r linux-arm src/       
    - name: Echo
      run: echo $(pwd)
    - name: Zip
      run: zip -r linux-arm.zip src/bin/Release/netcoreapp3.1/linux-arm/publish
    - uses: actions/upload-artifact@v2
      with:
        name: linux-arm
        path: linux-arm.zip
    #- name: Test
    #  run: dotnet test --no-build --verbosity normal

  # x64:
  #   runs-on: ubuntu-latest

  #   steps:    
  #   - uses: actions/checkout@v2
  #   - name: Login to DockerHub Registry
  #     run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin    

  #   - name: Build the tagged Docker image for linux-x64
  #     run: docker build . --file linux-x64.Dockerfile --tag rhdpin/lazyfetcher:1.0.5-linux-x64
  #   - name: Push the tagged Docker image for linux-x64
  #     run: docker push rhdpin/lazyfetcher:1.0.5-linux-x64
  #   - name: Build the latest Docker image for linux-x64
  #     run: docker build . --file linux-x64.Dockerfile --tag rhdpin/lazyfetcher:linux-x64
  #   - name: Push the latest Docker image for linux-x64
  #     run: docker push rhdpin/lazyfetcher:linux-x64

  # arm:
  #   runs-on: self-hosted

  #   steps:    
  #   - uses: actions/checkout@v2
  #   - name: Login to DockerHub Registry
  #     run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin    

  #   - name: Build the tagged Docker image for linux-arm
  #     run: docker build . --file linux-arm.Dockerfile --tag rhdpin/lazyfetcher:1.0.5-linux-arm32v7
  #   - name: Push the tagged Docker image for linux-arm
  #     run: docker push rhdpin/lazyfetcher:1.0.5-linux-arm32v7
  #   - name: Build the latest Docker image for linux-arm
  #     run: docker build . --file linux-arm.Dockerfile --tag rhdpin/lazyfetcher:linux-arm32v7
  #   - name: Push the latest Docker image for linux-arm
  #     run: docker push rhdpin/lazyfetcher:linux-arm32v7


